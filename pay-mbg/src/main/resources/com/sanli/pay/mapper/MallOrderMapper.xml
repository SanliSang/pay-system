<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanli.pay.mapper.MallOrderMapper">
  <resultMap id="BaseResultMap" type="com.sanli.pay.model.MallOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="shipping_address_id" jdbcType="INTEGER" property="shippingAddressId" />
    <result column="postage" jdbcType="DECIMAL" property="postage" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="pay_platform" jdbcType="INTEGER" property="payPlatform" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="completion_time" jdbcType="TIMESTAMP" property="completionTime" />
    <result column="close_time" jdbcType="TIMESTAMP" property="closeTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_no, shipping_address_id, postage, total_amount, pay_amount, pay_platform, 
    payment_type, status, delivery_time, create_time, update_time, payment_time, completion_time, 
    close_time
  </sql>
  <select id="selectByExample" parameterType="com.sanli.pay.model.MallOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mall_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mall_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mall_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanli.pay.model.MallOrderExample">
    delete from mall_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanli.pay.model.MallOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mall_order (user_id, order_no, shipping_address_id, 
      postage, total_amount, pay_amount, 
      pay_platform, payment_type, status, 
      delivery_time, create_time, update_time, 
      payment_time, completion_time, close_time
      )
    values (#{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{shippingAddressId,jdbcType=INTEGER}, 
      #{postage,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, 
      #{payPlatform,jdbcType=INTEGER}, #{paymentType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{deliveryTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{completionTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanli.pay.model.MallOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mall_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="shippingAddressId != null">
        shipping_address_id,
      </if>
      <if test="postage != null">
        postage,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payPlatform != null">
        pay_platform,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="completionTime != null">
        completion_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="shippingAddressId != null">
        #{shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        #{postage,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payPlatform != null">
        #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completionTime != null">
        #{completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanli.pay.model.MallOrderExample" resultType="java.lang.Long">
    select count(*) from mall_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mall_order
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.orderNo != null">
        order_no = #{row.orderNo,jdbcType=BIGINT},
      </if>
      <if test="row.shippingAddressId != null">
        shipping_address_id = #{row.shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="row.postage != null">
        postage = #{row.postage,jdbcType=DECIMAL},
      </if>
      <if test="row.totalAmount != null">
        total_amount = #{row.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="row.payAmount != null">
        pay_amount = #{row.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="row.payPlatform != null">
        pay_platform = #{row.payPlatform,jdbcType=INTEGER},
      </if>
      <if test="row.paymentType != null">
        payment_type = #{row.paymentType,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.deliveryTime != null">
        delivery_time = #{row.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.paymentTime != null">
        payment_time = #{row.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.completionTime != null">
        completion_time = #{row.completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.closeTime != null">
        close_time = #{row.closeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mall_order
    set id = #{row.id,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      order_no = #{row.orderNo,jdbcType=BIGINT},
      shipping_address_id = #{row.shippingAddressId,jdbcType=INTEGER},
      postage = #{row.postage,jdbcType=DECIMAL},
      total_amount = #{row.totalAmount,jdbcType=DECIMAL},
      pay_amount = #{row.payAmount,jdbcType=DECIMAL},
      pay_platform = #{row.payPlatform,jdbcType=INTEGER},
      payment_type = #{row.paymentType,jdbcType=INTEGER},
      status = #{row.status,jdbcType=INTEGER},
      delivery_time = #{row.deliveryTime,jdbcType=TIMESTAMP},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      payment_time = #{row.paymentTime,jdbcType=TIMESTAMP},
      completion_time = #{row.completionTime,jdbcType=TIMESTAMP},
      close_time = #{row.closeTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanli.pay.model.MallOrder">
    update mall_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="shippingAddressId != null">
        shipping_address_id = #{shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        postage = #{postage,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payPlatform != null">
        pay_platform = #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completionTime != null">
        completion_time = #{completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanli.pay.model.MallOrder">
    update mall_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=BIGINT},
      shipping_address_id = #{shippingAddressId,jdbcType=INTEGER},
      postage = #{postage,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_platform = #{payPlatform,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      completion_time = #{completionTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>