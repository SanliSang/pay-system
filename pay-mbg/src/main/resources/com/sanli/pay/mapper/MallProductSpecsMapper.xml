<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanli.pay.mapper.MallProductSpecsMapper">
  <resultMap id="BaseResultMap" type="com.sanli.pay.model.MallProductSpecs">
    <id column="specs_id" jdbcType="INTEGER" property="specsId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_specs" jdbcType="VARCHAR" property="productSpecs" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    specs_id, product_id, product_specs, stock, price, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sanli.pay.model.MallProductSpecsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mall_product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mall_product_specs
    where specs_id = #{specsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mall_product_specs
    where specs_id = #{specsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanli.pay.model.MallProductSpecsExample">
    delete from mall_product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanli.pay.model.MallProductSpecs">
    insert into mall_product_specs (specs_id, product_id, product_specs, 
      stock, price, create_time, 
      update_time)
    values (#{specsId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productSpecs,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sanli.pay.model.MallProductSpecs">
    insert into mall_product_specs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="specsId != null">
        specs_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productSpecs != null">
        product_specs,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="specsId != null">
        #{specsId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productSpecs != null">
        #{productSpecs,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanli.pay.model.MallProductSpecsExample" resultType="java.lang.Long">
    select count(*) from mall_product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mall_product_specs
    <set>
      <if test="row.specsId != null">
        specs_id = #{row.specsId,jdbcType=INTEGER},
      </if>
      <if test="row.productId != null">
        product_id = #{row.productId,jdbcType=INTEGER},
      </if>
      <if test="row.productSpecs != null">
        product_specs = #{row.productSpecs,jdbcType=VARCHAR},
      </if>
      <if test="row.stock != null">
        stock = #{row.stock,jdbcType=INTEGER},
      </if>
      <if test="row.price != null">
        price = #{row.price,jdbcType=DECIMAL},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mall_product_specs
    set specs_id = #{row.specsId,jdbcType=INTEGER},
      product_id = #{row.productId,jdbcType=INTEGER},
      product_specs = #{row.productSpecs,jdbcType=VARCHAR},
      stock = #{row.stock,jdbcType=INTEGER},
      price = #{row.price,jdbcType=DECIMAL},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanli.pay.model.MallProductSpecs">
    update mall_product_specs
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productSpecs != null">
        product_specs = #{productSpecs,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where specs_id = #{specsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanli.pay.model.MallProductSpecs">
    update mall_product_specs
    set product_id = #{productId,jdbcType=INTEGER},
      product_specs = #{productSpecs,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where specs_id = #{specsId,jdbcType=INTEGER}
  </update>
</mapper>